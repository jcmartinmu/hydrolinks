bbdf = data.frame(file=character(), xmin=numeric(), xmax=numeric(), ymin=numeric(), ymax=numeric())
for(i in 1:length(bboxes)){
bbdf[i,2:3] = bboxes[[i]][1,]
bbdf[i,4:5] = bboxes[[i]][2,]
bbdf[i,1] = shapefiles[i]
}
bbdf
shapefiles
bbdf
bbdf[i,1] = shapefiles[i]
bbdf = data.frame(file=character(), xmin=numeric(), xmax=numeric(), ymin=numeric(), ymax=numeric(), stringsAsFactors = FALSE)
for(i in 1:length(bboxes)){
bbdf[i,2:3] = bboxes[[i]][1,]
bbdf[i,4:5] = bboxes[[i]][2,]
bbdf[i,1] = shapefiles[i]
}
bbdf
bbdf = data.frame(file=character(), xmin=numeric(), xmax=numeric(), ymin=numeric(), ymax=numeric(), stringsAsFactors = FALSE)
bbdf = data.frame(file=character(), xmin=numeric(), xmax=numeric(), ymin=numeric(), ymax=numeric(), stringsAsFactors = FALSE)
bbdf = data.frame(file=character(), xmin=numeric(), xmax=numeric(), ymin=numeric(), ymax=numeric(), stringsAsFactors = FALSE)
for(i in 1:length(bboxes)){
bbdf[i,2:3] = bboxes[[i]][1,]
bbdf[i,4:5] = bboxes[[i]][2,]
bbdf[i,1] = shapefiles[i]
}
getbb = function(shapefile){
tmp = readOGR(shapefile)
return(tmp@bbox)
}
getbb = function(shapefile){
tmp = readOGR(shapefile)
return(tmp@bbox)
}
getbb = function(shapefile){
tmp = readOGR(shapefile)
return(tmp@bbox)
}
dir.create('inst/extdata', recursive = TRUE)
save(bbdf, file='inst/extdata/nhd_bb_cache.Rdata')
wbd_bb=bbdf
data.frame(1:10)
apply(data.frame(1:10), 1, function(print(x))
apply(data.frame(1:10), 1, function(){print(x)})
apply(data.frame(1:10), 1, function(x){print(x)})
apply(data.frame(1:10), 1, function(x){browser()})
x
typeof(x)
class(x)
apply(data.frame(1:10, 2:11), 1, function(x){browser()})
x
typeof(x)
class(x)
x$X1.10
lat
lon
lats = lat
lons = lon
ids = 'site'
res   = list()
for(i in 1:length(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin <= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
sites = data.frame(lats, lons, ids)
res   = list()
for(i in 1:length(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin <= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
res
wbd_bb
for(i in 1:length(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin >= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
res   = list()
for(i in 1:length(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin >= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
res
sites = data.frame(lats, lons, ids)
res   = list()
for(i in 1:length(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin >= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
sites
i
for(i in 1:nrow(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin >= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
res
sites = data.frame(lats, lons, ids)
res   = list()
for(i in 1:nrow(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin >= sites[i,'lats'] && ymax <= sites[i,'lats'])
}
nrow
i=1
nrow(sites)
subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'] && ymin >= sites[i,'lats'] && ymax <= sites[i,'lats'])
sites[i, 'lats']
sites[i, 'lons']
subset(wbd_bb, xmin <= sites[i,'lons'] && xmax >= sites[i,'lons'])
subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'])
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'] & ymin >= sites[i,'lats'] & ymax <= sites[i,'lats'])
sites = data.frame(lats, lons, ids)
res   = list()
for(i in 1:nrow(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'] & ymin >= sites[i,'lats'] & ymax <= sites[i,'lats'])
}
res
i=1
subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'] & ymin >= sites[i,'lats'] & ymax <= sites[i,'lats'])
subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'])
subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'] & ymin >= sites[i,'lats'])
sites[i,'lats']
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'] & ymin <= sites[i,'lats'] & ymax >= sites[i,'lats'])
res
res
lats
lats = c(43.52721,44.006778)
lons
lons = c(lons, -88.437567)
lons
ids = c('george', 'winnebago')
ids
sites = data.frame(lats, lons, ids)
res   = list()
for(i in 1:nrow(sites)){
res[[i]] = subset(wbd_bb, xmin <= sites[i,'lons'] & xmax >= sites[i,'lons'] & ymin <= sites[i,'lats'] & ymax >= sites[i,'lats'])
}
res
do.call(rbind, res)
unique(do.call(rbind, res))
to_check = unique(do.call(rbind, res))
i=1
nhd       = readOGR(to_check[i,'file'])
id_prefix = 'nhd_'
ids = rep(NA, length(sites$lats))
not_na = which(!is.na(sites$lats) & !is.na(sites$lons))
xy = cbind(sites$lons, sites$lats)
pts = SpatialPoints(xy[not_na,], proj4string=CRS(proj4string(nhd)))
prmids = as.character(over(pts, nhd, fn = NULL, returnList = FALSE)$Prmnn_I)
prmids
over(pts, nhd, fn = NULL, returnList = FALSE)
matches = over(pts, nhd, fn = NULL, returnList = FALSE)
matches
matches$TOMATCH_ID = sites$ids[not_na]
matches
match_res = list()
match_res = list()
#TODO: Finish this
for(i in 1:nrow(to_check)){
#get nhd layer
nhd       = readOGR(to_check[i,'file'])
ids = rep(NA, length(sites$lats))
not_na = which(!is.na(sites$lats) & !is.na(sites$lons))
xy = cbind(sites$lons, sites$lats)
pts = SpatialPoints(xy[not_na,], proj4string=CRS(proj4string(nhd)))
matches = over(pts, nhd, fn = NULL, returnList = FALSE)
matches$TOMATCH_ID = sites$ids[not_na]
match_res[[i]] = matches
}
match_res
unique(do.call(rbind, match_res))
na.omit(unique(do.call(rbind, match_res)))
unique(do.call(rbind, match_res))
unique_matches = unique(do.call(rbind, match_res))
return(unique_matches[!is.na(unique_matches$PERMANENT_)])
unique_matches[!is.na(unique_matches$PERMANENT_)]
unique_matches = unique(do.call(rbind, match_res))
unique_matches[!is.na(unique_matches$PERMANENT_), ]
library(nhdtools)
library(nhdtools)
library(nhdtools)
library(nhdtools)
wbd_shapes = file.path(local_storage(), 'HU4', 'Shape_unzip', '*', 'Shape', 'NHDWaterbody.shp')
load(file=system.file('extdata/nhd_bb_cache.Rdata', package='nhdtools'))
wbd_bb = bbdf
i=1
nhd       = readOGR(wbd_bb[i,'file'])
library(rgdal)
nhd       = readOGR(wbd_bb[i,'file'])
nhd
nhd@data
head(nhd@data)
library(nhdtools)
?over
library(nhdtools)
local_storage()
ls(local_storage())
dir(local_storage())
dir(file.path(local_storage(), 'NU4'))
dir(file.path(local_storage(), 'HighResolution'))
dir(file.path(local_storage(), 'HighResolution', 'Shape'))
dir(file.path(local_storage(), 'HighResolution'))
dir(file.path(local_storage(), 'HighResolution', 'Shape'))
dir(file.path(local_storage(), 'HU4' ))
dir(file.path(local_storage(), 'HU4', 'Shape_unzip'))
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip', ))
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip', )
)
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip')
)
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip'))
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip', '*'))
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip', 'Shape'))
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip', 'Shape', '*'))
Sys.glob(file.path(local_storage(), 'HU4', 'Shape_unzip', '*.zip', 'Shape', '*.shp'))
library(nhdtools)
library(nhdtools)
all_nhd_shapefiles()
all_nhd_shapefiles()[1]
library(rgdal)
library(rgeos)
tmp = readOGR(all_nhd_shapefiles()[1])
tmp
plot(mtmp)
plot(tmp)
gArea(tmp)
gArea(tmp, byid = TRUE)
library(rgdal)
state = readOGR('b:/all.lake.data/lookup_tables/MN', 'dnr_hydro_features_all')
shapedf = state
wbd_shapes = file.path(local_storage(), 'HU4', 'Shape_unzip', '*', 'Shape', 'NHDWaterbody.shp')
load(file=system.file('extdata/nhd_bb_cache.Rdata', package='nhdtools'))
wbd_bb = bbdf
library(nhdtools)
shapedf@bbox
wbd_bb[1]
wbd_bb[1]$file
wbd_bb$file[1]
tmp = readOGR(wbd_bb$file[1])
head(tmp)
shapedf = spTransform(shapedf, CRS('+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0'))
shapedf@bbox
library(rgeos)
gBoundary(shapedf)
?gBoundary
gConvexHull(shapedf)
plot(gConvexHull(shapedf))
plot(shapedf, add=TRUE)
shapebb[1,1]
shapebb = shapedf@bbox
shapebb[1,1]
?over
wbd_bb
head(wbd_bb)
bb = wbd_bb
i = 1
all_polys = list()
for(i in 1:nrow(bb)){
coords = matrix(c(bb$xmin[i], bb$ymin[i],
bb$xmin[i], bb$ymax[i],
bb$xmax[i], bb$ymax[i],
bb$xmax[i], bb$ymin[i],
bb$xmin[i], bb$ymin[i]),
ncol = 2, byrow = TRUE)
all_polys[[i]] = Polygon(coords)
}
all_polys
Ps1 = SpatialPolygons(list(Polygons(all_polys, ID = bb$file)), proj4string=CRS(nhd_proj))
?Polygons
Ps1 = SpatialPolygons(list(Polygons(all_polys, ID = 'nhd')), proj4string=CRS(nhd_proj))
nhd_proj = '+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0'
Ps1 = SpatialPolygons(list(Polygons(all_polys, ID = 'nhd')), proj4string=CRS(nhd_proj))
plot(PS1)
plot(Ps1)
Ps1
?SpatialPolygons
SpatialPolygonsDataFrame(Ps1, bb[,'file', drop=FALSE])
SpatialPolygonsDataFrame(all_polys, bb[,'file', drop=FALSE])
SpatialPolygonsDataFrame(Polygons(all_polys, ID='nhd'), bb[,'file', drop=FALSE])
all_polys = list()
for(i in 1:nrow(bb)){
coords = matrix(c(bb$xmin[i], bb$ymin[i],
bb$xmin[i], bb$ymax[i],
bb$xmax[i], bb$ymax[i],
bb$xmax[i], bb$ymin[i],
bb$xmin[i], bb$ymin[i]),
ncol = 2, byrow = TRUE)
all_polys[[i]] = Polygons(Polygon(coords), ID=bb$file[i])
}
bb
all_polys = list()
for(i in 1:nrow(bb)){
coords = matrix(c(bb$xmin[i], bb$ymin[i],
bb$xmin[i], bb$ymax[i],
bb$xmax[i], bb$ymax[i],
bb$xmax[i], bb$ymin[i],
bb$xmin[i], bb$ymin[i]),
ncol = 2, byrow = TRUE)
all_polys[[i]] = Polygons(Polygon(coords), ID=bb$file[i])
}
i=1
coords = matrix(c(bb$xmin[i], bb$ymin[i],
bb$xmin[i], bb$ymax[i],
bb$xmax[i], bb$ymax[i],
bb$xmax[i], bb$ymin[i],
bb$xmin[i], bb$ymin[i]),
ncol = 2, byrow = TRUE)
all_polys[[i]] = Polygons(Polygon(coords), ID=bb$file[i])
all_polys
Polygons(Polygon(coords), ID=bb$file[i])
Polygons(list(Polygon(coords)), ID=bb$file[i])
all_polys = list()
for(i in 1:nrow(bb)){
coords = matrix(c(bb$xmin[i], bb$ymin[i],
bb$xmin[i], bb$ymax[i],
bb$xmax[i], bb$ymax[i],
bb$xmax[i], bb$ymin[i],
bb$xmin[i], bb$ymin[i]),
ncol = 2, byrow = TRUE)
all_polys[[i]] = Polygons(list(Polygon(coords)), ID=bb$file[i])
}
Ps1 = SpatialPolygons(all_polys, proj4string=CRS(nhd_proj))
SpatialPolygonsDataFrame(Ps1, bb[,'file', drop=FALSE])
spdata = bb[,'file', drop=FALSE]
rownames(spdata) = spdata$file
SpatialPolygonsDataFrame(Ps1, spdata)
wbd_bb = bbs_to_sp(bbdf)
bbs_to_sp = function(bb){
all_polys = list()
for(i in 1:nrow(bb)){
coords = matrix(c(bb$xmin[i], bb$ymin[i],
bb$xmin[i], bb$ymax[i],
bb$xmax[i], bb$ymax[i],
bb$xmax[i], bb$ymin[i],
bb$xmin[i], bb$ymin[i]),
ncol = 2, byrow = TRUE)
all_polys[[i]] = Polygons(list(Polygon(coords)), ID=bb$file[i])
}
Ps1 = SpatialPolygons(all_polys, proj4string=CRS(nhd_proj))
spdata = bb[,'file', drop=FALSE]
rownames(spdata) = spdata$file
return(SpatialPolygonsDataFrame(Ps1, spdata))
}
wbd_bb = bbs_to_sp(bbdf)
shapeout = rgeos::gConvexHull(shapedf)
plot(shapeout)
over(shapeout, wbd_bb)
over(wbd_bb, shapeout)
tmp = over(wbd_bb, shapeout)
nrow(tmp)
tmp
head(tmp)
length(tmp)
class(tmp)
tail(tmp)
?over
names(tmp)
tmp = over(wbd_bb, shapeout, returnList=TRUE)
tmp
tmp[[1]]
names(tmp)
length(shapeout)
length(wbd_bb)
plot(shapeout)
plot(wbd_bb)
plot(shapeout, add=TRUE, col='red')
gIntersects(shapeout, wbd_bb)
gIntersects(shapeout, wbd_bb, byid = TRUE)
matches = gIntersects(shapeout, wbd_bb, byid = TRUE)
matches
matches[matches]
names(matches)[matches]
rownames(matches)[matches]
filematches = rownames(matches)[matches]
matches = gIntersects(shapeout, wbd_bb, byid = TRUE)
filematches = rownames(matches)[matches]
i=2
nhd       = readOGR(filematches[i])
over(shapedf, nhd)
over(shapedf, nhd, returnList=TRUE)
shapedf[1,]
shapedf[2,]
over(shapedf[1,], nhd)
gIntersects(shapedf, nhd, byid=TRUE)
gIntersects(shapedf[1:10,], nhd, byid=TRUE)
nrow(nhd)
?'gIntersects()
?gIntersects()
gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
tmp = gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
tmp
tail(mtp)
tail(tmp)
head(shapedf)
filematches
i=8
nhd       = readOGR(filematches[i])
tmp = gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
tmp
all(is.null(tmp))
which(!is.null(tmp))
head(tmp)
tmp[1]
!is.null(tmp)
is.null(tmp)
tmp
length(tmp)
unlist(tmp)
tmp
typeof(tmp)
class(tmp)
sapply(tmp, is.null)
which(!sapply(tmp, is.null))
for(i in 1:length(filematches)){
#get nhd layer
nhd       = readOGR(filematches[i])
tmp = gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
cat(which(!sapply(tmp, is.null)))
cat(i)
}
i=1
nhd       = readOGR(filematches[i])
tmp = gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
which(!sapply(tmp, is.null))
tmp[which(!sapply(tmp, is.null))]
tmp[which(!sapply(tmp, is.null))]
sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]}
)
sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]})
names(sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]}))
match_id = names(sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]}))
nhd_indx = sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]})
length(match_id)
length(nhd_indx)
head(nhd)
nhd@data
nhd@data$PERMANENT_
nhd@data
nhd@data[nhd_indx, ]
head(nhd@data[nhd_indx, ])
head(nhd@data)
head(tmp)
head(shapedf@data)
match_id %in% shapedf$dnr_hydro_
all(match_id %in% shapedf$dnr_hydro_)
sum(match_id %in% shapedf$dnr_hydro_)
length(match_id)
which(!(match_id %in% shapedf$dnr_hydro_))
match_id[329]
range(match_id)
length(shapedf)
range(shapedf$dnr_hydro_)
range(as.character(shapedf$dnr_hydro_))
tmp
head(tmp)
tail(tmp)
length(shapedf)
which(!sapply(tmp, is.null))
head(tmp)
tail(tmp)
which(!sapply(tmp, is.null))
diff(which(!sapply(tmp, is.null)))
tail(which(!sapply(tmp, is.null)))
tmp[139453]
tmp[139454]
match_indx = which(!sapply(tmp, is.null))
nhd_indx = sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]})
shapedf$dowlknum[match_indx]
match_indx
nhd$PERMANENT_[nhd_indx]
data.frame(match_indx, PERMANENT_ID=nhd$PERMANENT_[nhd_indx])
match_res = list()
#TODO: Finish this
for(i in 1:length(filematches)){
#get nhd layer
nhd       = readOGR(filematches[i])
tmp = gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
match_indx = which(!sapply(tmp, is.null))
nhd_indx = sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]})
poly_matches = data.frame(match_indx, PERMANENT_ID=nhd$PERMANENT_[nhd_indx])
if(nrow(poly_matches) > 0){
match_res[[i]] = poly_matches
}
}
unique_matches = unique(do.call(rbind, match_res))
i
nhd_indx
sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]})
tmp
all(sapply(tmp, is.null))
match_res
length(match_res)
nhd@data
head(nhd@data)
nhd = subset(nhd, FTYPE %in% c('390', '361', '436'))
match_res = list()
length(match_res)
match_res = list()
#TODO: Finish this
for(i in 1:length(filematches)){
#get nhd layer
nhd       = readOGR(filematches[i])
nhd = subset(nhd, FTYPE %in% c('390', '361', '436'))
tmp = gIntersects(shapedf, nhd, byid=TRUE, returnDense=FALSE)
if(all(sapply(tmp, is.null))){
next
}
match_indx = which(!sapply(tmp, is.null))
nhd_indx = sapply(tmp[which(!sapply(tmp, is.null))], function(x){x[1]})
poly_matches = data.frame(match_indx, PERMANENT_ID=nhd$PERMANENT_[nhd_indx])
if(nrow(poly_matches) > 0){
match_res[[length(match_res)+1]] = poly_matches
}
}
unique_matches = unique(do.call(rbind, match_res))
unique_matches
return(unique_matches[!is.na(unique_matches$PERMANENT_), ])
unique_matches[!is.na(unique_matches$PERMANENT_), ]
library(nhdtools)
library(nhdtools)
library(nhdtools)
